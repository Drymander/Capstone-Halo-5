

import plotly.express as px
df = df
# fig = px.bar(df, x='TotalTimePlayed', y='Gamertag', orientation='h')
# fig.show()

# df = recent_match_stats('Drymander', back_count=0)

import plotly.graph_objects as go

fig = go.Figure(go.Bar(
            x=df['TotalTimePlayed'],
            y=df['Gamertag'],
            orientation='h',
            text=df['TotalTimePlayed'].round(0),
            textposition='auto'))

import plotly.graph_objects as go
from plotly.subplots import make_subplots
st.dataframe(df)

st.plotly_chart(fig)

st.bar_chart(df['TotalTimePlayed'])

from compare_stat import compare_stat

# def compare_stat(df, column_name):

#     # Separate player and enemy teams
#     df_player = df.loc[df['PlayerTeam'] == 'Player']
#     df_enemy = df.loc[df['PlayerTeam'] == 'Enemy']

#     # Sort total time played by descending
#     df_player = df_player.sort_values(by=[column_name])
#     df_enemy = df_enemy.sort_values(by=[column_name])

#     # Assign player / enemy colors
#     if df_player['TeamColor'].iloc[0] == 'Blue':
#         player_color = 'Blue'
#         enemy_color = 'Red'
#     else:
#         player_color = 'Red'
#         enemy_color = 'Blue'
    
#     # Make subplot and X axis range
#     fig = make_subplots(rows=2, cols=1, subplot_titles=['Player Team', 'Enemy Team'])
#     x_range = df[column_name].max()
    
#     # Player team sub plot
#     fig.add_trace(go.Bar(
#                 x=df_player[column_name],
#                 y=df_player['Gamertag'],
#                 orientation='h',
#                 text=df_player[column_name].round(2),
#                 textposition='auto',
#                 marker_color=player_color),
#                     row=1, col=1)
#     fig.update_xaxes(range=[0, x_range], row=1, col=1)
    
#     # Enemy team sub plot
#     fig.add_trace(go.Bar(
#                 x=df_enemy[column_name],
#                 y=df_enemy['Gamertag'],
#                 orientation='h',
#                 text=df_enemy[column_name].round(2),
#                 textposition='auto',
#                 marker_color=enemy_color),
#                     row=2, col=1)
#     fig.update_xaxes(range=[0, x_range], row=2, col=1)
    
    # Show plot
#     fig.show()
    
#     return fig

fig = compare_stat(df, 'TotalTimePlayed')

st.plotly_chart(fig)












# fig = plt.figure()
# fig.patch.set_facecolor('white')
# fig.patch.set_alpha(0.6)

# ax = plt.axes()
# ax.set_facecolor("white")
# # OR

# plt.barh( df['Gamertag'], df['TotalTimePlayed'].sort_values())

# # setting label of y-axis
# plt.ylabel("Gamertag")
  
# # setting label of x-axis
# plt.xlabel("Hours") 
# plt.title("Time Played")
# plt.show()


File "c:\users\johnn\anaconda3\envs\learn-env\lib\site-packages\streamlit\script_runner.py", line 350, in _run_script
    exec(code, module.__dict__)
File "C:\Users\johnn\Documents\GitHub\halo-upload-2\halo.py", line 84, in <module>
    fig = compare_stat(df, 'TotalHeadshots')
File "C:\Users\johnn\Documents\GitHub\halo-upload-2\halo.py", line 45, in compare_stat
    df_player = df_player.sort_values(by=[column_name])
File "c:\users\johnn\anaconda3\envs\learn-env\lib\site-packages\pandas\core\frame.py", line 5294, in sort_values
    k = self._get_label_or_level_values(by, axis=axis)
File "c:\users\johnn\anaconda3\envs\learn-env\lib\site-packages\pandas\core\generic.py", line 1563, in _get_label_or_level_values
    raise KeyError(key)